# {{ $_ := env "NODE_ENV" | set . "NodeEnv" }}
# {{ $_ := env "DEPLOY_MODE" | set . "DeployMode" }}
# {{ $sourceDit := "/opt/reaction/src" }}
# {{ $project := "reaction" }}
# {{ $meteorVersion := "1.8.0.2"}}
# {{ $nodeVersion := "8.11.4" }}
project: '{{ $project }}'
configVersion: 1
---
artifact: meteor-artifact
from: reactioncommerce/base:v{{ $meteorVersion }}-meteor
git:
  - add: /
    to: {{ $sourceDit }}
    owner: node
    group: node
    includePaths:
      - 'package.json'
      - 'package-lock.json'
      - '.reaction'
      - '.meteor'
      - 'bin'
    stageDependencies:
      install:
        - 'package.json'
        - 'package-lock.json'
        - '.reaction'
      setup:
        - '.meteor'
#mount:
#  - fromPath: {{ env "CI_PROJECT_DIR" }}
#    to: /result
shell:
  #beforeInstall:
  #  - 'echo "SECTION beforeInstall [artifact]"'
  install:
    - 'echo "SECTION install [artifact]"'
    - 'mkdir -p {{ $sourceDit }}/node_modules'
    - 'chown node {{ $sourceDit }}/node_modules'
    - 'mkdir -p {{ $sourceDit }}/.meteor/local'
    - 'chown node {{ $sourceDit }}/.meteor/local'
    - 'echo -----------------------------------------------------------'
    - 'su - node -c "/opt/reaction/src/.reaction/build-install.sh"'
    - 'echo -----------------------------------------------------------'
  #beforeSetup:
  #  - 'echo "SECTION beforeSetup [artifact]"'
  # SHOW AVALIBLE Meteor version
  #  - 'meteor show meteor'
  setup:
    - 'echo "SECTION setup [artifact mode: {{ env "MODE" }}]"'
    - 'echo -----------------------------------------------------------'
    # {{- if eq .NodeEnv "production"}}
    - 'su - node -c "/opt/reaction/src/.reaction/build-{{ env "MODE" }}.sh"'
    - 'echo -----------------------------------------------------------'
    # {{ end }}
# {{- if eq .NodeEnv "production"}}
#    - 'export PATH=$PATH:/home/node/.meteor:{{ $sourceDit }}/node_modules/.bin'
---
image: '{{ $project }}-{{ env "MODE" }}'
from: node:{{ $nodeVersion }}-slim
docker:
  WORKDIR: /app
  USER: node
  ENV: 
    ROOT_URL: "http://localhost"
    PORT: "3000"
    NODE_ENV: production
  EXPOSE: 
    - "3000"
  LABEL: 
    maintainer: "o.dolya@iwis.com.ua"
  ENTRYPOINT: ["/docker-entrypoint.sh"]
  CMD: ['node', 'main.js']
import:
  - artifact:  meteor-artifact
    # add: /opt/reaction/dist/bundle
    add: /opt/reaction
    to: /app
    owner: node
    group: node
    after: install
git:
  - add: /
    to: /app
    owner: node
    group: node
    includePaths:
      - '.reaction'
      - bin
      - public
    #excludePaths:
    #  - dist
    #  - node_modules
    stageDependencies:
      #install:
      #  - '.reaction'
      setup:
        - '.reaction'
        - bin
        - public
shell:
  beforeInstall:
    - 'echo "SECTION beforeInstall"'
  install:
    - 'echo -----------------------------------------------------------'
    - 'echo "SECTION installi [mode: {{ env "MODE" }}]"'
    - 'echo -----------------------------------------------------------'
  beforeSetup:
    - 'echo "SECTION beforeSetup"'
  setup:
    - 'echo -----------------------------------------------------------'
    - 'echo "SECTION setup [mode: {{ env "MODE" }}]"'
    - 'echo -----------------------------------------------------------'
    - 'cd /appi1'
    - 'cp /app/bin/docker-entrypoint.sh /docker-entrypoint.sh'
    - 'chmod 0777 /docker-entrypoint.sh'
# {{- else }}
---
image: '{{ $project }}-{{ env "MODE" }}'
from: node:{{ $nodeVersion }}-slim
docker:
  WORKDIR: /app
  USER: node
  ENV: 
    ROOT_URL: "http://localhost"
    PORT: "3000"
    NODE_ENV: development
  EXPOSE: 
    - "3000"
  LABEL: 
    maintainer: "o.dolya@iwis.com.ua"
  #ENTRYPOINT: ["/docker-entrypoint.sh"]
  CMD: ['node', 'main.js']
import:
  - artifact:  meteor-artifact
    # add: /opt/reaction/dist/bundle
    add: /opt/reaction/src
    to: /app
    owner: node
    group: node
    after: install
shell:
  beforeInstall:
    - 'echo "SECTION beforeInstall"'
  install:
    - 'echo -----------------------------------------------------------'
    - 'echo "SECTION install"'
    - 'echo -----------------------------------------------------------'
  beforeSetup:
    - 'echo "SECTION beforeSetup"'
  setup:
    - 'echo -----------------------------------------------------------'
    - 'echo "SECTION setup"'
    - 'echo -----------------------------------------------------------'
# {{ end }}
asLayers: false
